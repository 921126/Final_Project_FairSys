{"version":3,"file":"js/5.e9908b0d.js","mappings":"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","sources":["webpack://frontend/./node_modules/@kurkle/color/dist/color.esm.js","webpack://frontend/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://frontend/./node_modules/chart.js/dist/chart.js","webpack://frontend/./node_modules/vue-chartjs/dist/index.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.2.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for(i = 0, ilen = items.length; i < ilen; ++i){\n        set.add(items[i]);\n    }\n    if (set.size === ilen) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\nfunction toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n         case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n         case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\n function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += font.lineHeight;\n    }\n    ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [\n    ''\n], rootScopes = scopes, fallback, getTarget = ()=>scopes[0]) {\n    if (!defined(fallback)) {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: rootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete target._keys;\n            delete scopes[0][prop];\n            return true;\n        },\n get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value;\n            delete target._keys;\n            return true;\n        }\n    });\n}\n function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete proxy[prop];\n            return true;\n        },\n get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n set (target, prop, value) {\n            proxy[prop] = value;\n            delete target[prop];\n            return true;\n        }\n    });\n}\n function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n        value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n                return fallback;\n            }\n        } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (defined(value)) {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (defined(value)) {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.2.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing'\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height1 = chartArea.h * weight;\n            const width1 = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n            }\n            stack.start = x;\n            stack.placed += height1;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    active = false;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID1 = Object.keys(position)[0];\n            const value1 = position[positionAxisID1];\n            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel = label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret1 = this._getYAxisLabelAlignment(tl);\n            textAlign = ret1.textAlign;\n            x = ret1.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i1 = 0; i1 < local.length; i1++){\n        const plugin = local[i1];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n    if (id) {\n        return id;\n    }\n    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.2.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){\n            this._updateDataset(i1, isFunction(mode) ? mode({\n                datasetIndex: i1\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox1 of hitboxes){\n                if (hitbox1.col !== col) {\n                    col = hitbox1.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox1.top = top;\n                hitbox1.left += this.left + padding;\n                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n                top += hitbox1.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = toTRBLCorners(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        ticks.push({\n            value: Math.round((niceMin + j * spacing) * factor) / factor\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n        const size = labelSizes[i];\n        const y = yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = getTextAlignForAngle(angle);\n        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y,\n            textAlign,\n            left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];\n        const { backdropColor  } = optsAtIndex;\n        if (!isNullOrUndef(backdropColor)) {\n            const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n            const padding = toPadding(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n            }\n        }\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { version, isProxy, toRaw, defineComponent, ref, shallowRef, onMounted, onBeforeUnmount, watch, h } from 'vue';\nimport { Chart as Chart$1, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\n\nconst CommonProps = {\n    data: {\n        type: Object,\n        required: true\n    },\n    options: {\n        type: Object,\n        default: ()=>({})\n    },\n    plugins: {\n        type: Array,\n        default: ()=>[]\n    },\n    datasetIdKey: {\n        type: String,\n        default: \"label\"\n    },\n    updateMode: {\n        type: String,\n        default: undefined\n    }\n};\nconst Props = {\n    type: {\n        type: String,\n        required: true\n    },\n    ...CommonProps\n};\n\nconst compatProps = version[0] === \"2\" ? (internals, props)=>Object.assign(internals, {\n        attrs: props\n    }) : (internals, props)=>Object.assign(internals, props);\nfunction toRawIfProxy(obj) {\n    return isProxy(obj) ? toRaw(obj) : obj;\n}\nfunction cloneProxy(obj) {\n    let src = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : obj;\n    return isProxy(src) ? new Proxy(obj, {}) : obj;\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets, datasetIdKey) {\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data, datasetIdKey) {\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"dataset\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"nearest\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"index\", {\n        intersect: true\n    }, false);\n}\n\nconst Chart = defineComponent({\n    props: Props,\n    setup (props, param) {\n        let { expose  } = param;\n        const canvasRef = ref(null);\n        const chartRef = shallowRef(null);\n        expose({\n            chart: chartRef\n        });\n        const renderChart = ()=>{\n            if (!canvasRef.value) return;\n            const { type , data , options , plugins , datasetIdKey  } = props;\n            const clonedData = cloneData(data, datasetIdKey);\n            const proxiedData = cloneProxy(clonedData, data);\n            chartRef.value = new Chart$1(canvasRef.value, {\n                type,\n                data: proxiedData,\n                options: {\n                    ...options\n                },\n                plugins\n            });\n        };\n        const destroyChart = ()=>{\n            const chart = toRaw(chartRef.value);\n            if (chart) {\n                chart.destroy();\n                chartRef.value = null;\n            }\n        };\n        const update = (chart)=>{\n            chart.update(props.updateMode);\n        };\n        onMounted(renderChart);\n        onBeforeUnmount(destroyChart);\n        watch([\n            ()=>props.options,\n            ()=>props.data\n        ], (param, param1)=>{\n            let [nextOptionsProxy, nextDataProxy] = param, [prevOptionsProxy, prevDataProxy] = param1;\n            const chart = toRaw(chartRef.value);\n            if (!chart) {\n                return;\n            }\n            let shouldUpdate = false;\n            if (nextOptionsProxy) {\n                const nextOptions = toRawIfProxy(nextOptionsProxy);\n                const prevOptions = toRawIfProxy(prevOptionsProxy);\n                if (nextOptions && nextOptions !== prevOptions) {\n                    setOptions(chart, nextOptions);\n                    shouldUpdate = true;\n                }\n            }\n            if (nextDataProxy) {\n                const nextLabels = toRawIfProxy(nextDataProxy.labels);\n                const prevLabels = toRawIfProxy(prevDataProxy.labels);\n                const nextDatasets = toRawIfProxy(nextDataProxy.datasets);\n                const prevDatasets = toRawIfProxy(prevDataProxy.datasets);\n                if (nextLabels !== prevLabels) {\n                    setLabels(chart.config.data, nextLabels);\n                    shouldUpdate = true;\n                }\n                if (nextDatasets && nextDatasets !== prevDatasets) {\n                    setDatasets(chart.config.data, nextDatasets, props.datasetIdKey);\n                    shouldUpdate = true;\n                }\n            }\n            if (shouldUpdate) {\n                update(chart);\n            }\n        }, {\n            deep: true\n        });\n        return ()=>{\n            return h(\"canvas\", {\n                ref: canvasRef\n            });\n        };\n    }\n});\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return defineComponent({\n        props: CommonProps,\n        setup (props, param) {\n            let { expose  } = param;\n            const ref = shallowRef(null);\n            const reforwardRef = (chartRef)=>{\n                ref.value = chartRef?.chart;\n            };\n            expose({\n                chart: ref\n            });\n            return ()=>{\n                return h(Chart, compatProps({\n                    ref: reforwardRef\n                }, {\n                    type,\n                    ...props\n                }));\n            };\n        }\n    });\n}\nconst Bar = /* #__PURE__ */ createTypedChart(\"bar\", BarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart(\"doughnut\", DoughnutController);\nconst Line = /* #__PURE__ */ createTypedChart(\"line\", LineController);\nconst Pie = /* #__PURE__ */ createTypedChart(\"pie\", PieController);\nconst PolarArea = /* #__PURE__ */ createTypedChart(\"polarArea\", PolarAreaController);\nconst Radar = /* #__PURE__ */ createTypedChart(\"radar\", RadarController);\nconst Bubble = /* #__PURE__ */ createTypedChart(\"bubble\", BubbleController);\nconst Scatter = /* #__PURE__ */ createTypedChart(\"scatter\", ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, createTypedChart, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","add","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","renderText","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","meta","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","skip","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","startAngle","endAngle","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","height1","width1","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","spacing","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","positionAxisID1","value1","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","borderDashOffset","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","i1","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","ilen1","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","borderRadius","maxR","enableBorder","boundingRects","outer","inner","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","legendItem","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","hitbox1","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineCap","lineJoin","lineDash","drawOptions","SQRT2","centerX","centerY","yBoxTop","xBoxLeft","textDirection","fontColor","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","previous","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","_args","legend","afterEvent","ci","useBorderRadius","borderCapStyle","borderJoinStyle","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","LogarithmicScale","_zero","changeExponent","generateTicks","RadialLinearScale","animate","angleLines","circular","pointLabels","centerPointLabels","xCenter","yCenter","drawingArea","_pointLabels","_pointLabelItems","getTickBackdropHeight","fitWithPointLabels","setCenterPoint","leftMovement","rightMovement","topMovement","bottomMovement","getIndexAngle","angleMultiplier","getDistanceFromCenterForValue","scalingFactor","getValueForDistanceFromCenter","scaledDistance","getPointLabelContext","pointLabel","createPointLabelContext","getPointPosition","distanceFromCenter","additionalAngle","getPointPositionForValue","getBasePosition","getPointLabelPosition","pathRadiusLine","drawPointLabels","drawRadiusLine","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","CommonProps","required","default","datasetIdKey","updateMode","Props","compatProps","internals","attrs","toRawIfProxy","cloneProxy","src","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","setup","param","expose","canvasRef","chartRef","renderChart","clonedData","proxiedData","destroyChart","param1","nextOptionsProxy","nextDataProxy","prevOptionsProxy","prevDataProxy","shouldUpdate","prevOptions","prevLabels","prevDatasets","deep","ref","createTypedChart","registerables","reforwardRef","Bar"],"sourceRoot":""}