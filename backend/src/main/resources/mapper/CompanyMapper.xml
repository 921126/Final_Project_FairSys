<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finalpj.backend.service.CompanyMapper">

  <insert id="regist" parameterType="JobPostingVO">
    insert into job_posting(j_recruitNum, j_email,
                            j_title, j_content, j_salary,
                            j_department, j_schedule, j_graduation,
                            j_career, j_type, com_id, j_end_date,
                            j_postcode, j_address, j_detail_address)
    values(#{j_recruitNum}, #{j_email},
           #{j_title}, #{j_content}, #{j_salary},
           #{j_department}, #{j_schedule}, #{j_graduation},
           #{j_career}, #{j_type}, #{com_id}, #{j_end_date},
           #{j_postcode}, #{j_address}, #{j_detail_address})
  </insert>

  <select id="getJobDetail" resultMap="jobPostingResultMap">
    select j.*, c.com_name, c.com_ceo, c.com_manager, c.com_manager_phone, c.com_category, c.com_address, c.com_detail_address
    from job_posting j
    left join company c on j.com_id = c.com_id
    where j_no = #{j_no}
  </select>
  <resultMap id="jobPostingResultMap" type="JobPostingVO">
    <id column="j_no" property="j_no"/>
    <result column="j_regdate" property="j_regdate"/>
    <result column="j_recruitNum" property="j_recruitNum"/>
    <result column="j_email" property="j_email"/>
    <result column="j_title" property="j_title"/>
    <result column="j_content" property="j_content"/>
    <result column="j_end_date" property="j_end_date"/>
    <result column="j_salary" property="j_salary"/>
    <result column="j_department" property="j_department"/>
    <result column="j_schedule" property="j_schedule"/>
    <result column="j_graduation" property="j_graduation"/>
    <result column="j_career" property="j_career"/>
    <result column="j_type" property="j_type"/>
    <result column="j_postcode" property="j_postcode"/>
    <result column="j_address" property="j_address"/>
    <result column="j_detail_address" property="j_detail_address"/>
    <result column="j_img_uuid" property="j_img_uuid"/>
    <result column="j_img_fileName" property="j_img_fileName"/>
    <result column="com_id" property="com_id"/>
    <association property="companyVO" resultMap="companyResultMap"/>
  </resultMap>
  <resultMap id="companyResultMap" type="CompanyVO">
    <id column="com_id" property="com_id"/>
    <result column="com_name" property="com_name"/>
    <result column="com_ceo" property="com_ceo"/>
    <result column="com_category" property="com_category"/>
    <result column="com_manager" property="com_manager"/>
    <result column="com_manager_phone" property="com_manager_phone"/>
    <result column="com_manager_phone" property="com_manager_phone"/>
    <result column="com_address" property="com_address"/>
    <result column="com_detail_address" property="com_detail_address"/>
  </resultMap>

  <update id="update" parameterType="JobPostingVO">
    update job_posting set j_title = #{j_title}, j_email = #{j_email}, j_recruitNum = #{j_recruitNum}, j_content = #{j_content}
    where j_no = #{j_no}
  </update>

  <delete id="delete" parameterType="JobPostingVO">
    delete from job_posting where j_no = #{j_no}
  </delete>

  <select id="getJobList" resultType="JobPostingVO">
    select j.*, c.com_name from job_posting j
    left join company c on j.com_id = c.com_id
    where 1 = 1
    <if test="jcri.searchTitle != '' ">
			<![CDATA[ and com_name like concat('%', #{jcri.searchTitle}, '%')]]>
		</if>
    <if test="jcri.searchCareer != '' ">
			<![CDATA[ and j_career = #{jcri.searchCareer}]]>
		</if>

    <if test="jcri.searchRegion != '' ">
      <if test="!jcri.searchRegion.contains('전체') ">
			  <![CDATA[ and j_address like concat('%', #{jcri.searchRegion}, '%')]]>
		  </if>

      <if test="jcri.searchRegion.contains('전체') ">
        <if test="jcri.searchRegion.contains('서울') ">
          <![CDATA[ and j_address like concat('%', '서울', '%')]]>
        </if>
        <if test="jcri.searchRegion.contains('경기') ">
          <![CDATA[ and j_address like concat('%', '경기', '%')]]>
        </if>
        <if test="jcri.searchRegion.contains('인천') ">
          <![CDATA[ and j_address like concat('%', '인천', '%')]]>
        </if>
		  </if>
		</if>
    order by j_no desc
    limit #{jcri.pageStart}, #{jcri.amount}
  </select>

  <select id="getTotal" resultType="int">
    select count(*) as total from job_posting j
    left join company c on j.com_id = c.com_id
    where 1 = 1
    <if test="jcri.searchTitle != '' ">
			<![CDATA[ and com_name like concat('%', #{jcri.searchTitle}, '%')]]>
		</if>
    <if test="jcri.searchCareer != '' ">
			<![CDATA[ and j_career = #{jcri.searchCareer}]]>
		</if>

    <if test="jcri.searchRegion != '' ">
      <if test="!jcri.searchRegion.contains('전체') ">
			  <![CDATA[ and j_address like concat('%', #{jcri.searchRegion}, '%')]]>
		  </if>

      <if test="jcri.searchRegion.contains('전체') ">
        <if test="jcri.searchRegion.contains('서울') ">
          <![CDATA[ and j_address like concat('%', '서울', '%')]]>
        </if>
        <if test="jcri.searchRegion.contains('경기') ">
          <![CDATA[ and j_address like concat('%', '경기', '%')]]>
        </if>
        <if test="jcri.searchRegion.contains('인천') ">
          <![CDATA[ and j_address like concat('%', '인천', '%')]]>
        </if>
		  </if>
		</if>
  </select>

  <select id="getCompanyVO" resultType="CompanyVO">
    select * from company where com_id = #{com_id}
  </select>

  <!-- 채용 공고에 지원(취준생 입장) -->
  <select id="apply" resultType="ResumeWriteVO">
    select * from resume_write where user_id = #{user_id}
  </select>

  <!-- 채용 공고에 지원(취준생 입장) -->
  <insert id="applyInsert" parameterType="UserStatusVO">
    insert into user_status(user_id, com_id, user_name, user_phone, user_email, user_address,
                            user_gender, user_level, user_finish, user_major, user_fndate, user_com,
                            user_position, user_join, user_leave, user_subject, user_score, user_get,
                            user_license, user_getlicense)
    values(#{user_id}, #{com_id}, #{user_name}, #{user_phone}, #{user_email}, #{user_address},
           #{user_gender}, #{user_level}, #{user_finish}, #{user_major}, #{user_fndate}, #{user_com},
           #{user_position}, #{user_join}, #{user_leave}, #{user_subject}, #{user_score}, #{user_get},
           #{user_license}, #{user_getlicense})
  </insert>
  
  <select id="checkApply" resultType="int">
    select count(*) from user_status where user_id = #{user_id} and com_id = #{com_id}
  </select>

  <select id="checkPosting" resultType="int">
    select count(*) from job_posting where com_id = #{com_id}
  </select>

  <select id="getJno" resultType="String">
    select j_no from job_posting where com_id = #{com_id}
  </select>

  <insert id="uploadImg" parameterType="String">
    update job_posting
    set j_img_uuid = #{j_img_uuid}, j_img_fileName = #{j_img_fileName}
    where com_id = #{com_id}
  </insert>

</mapper>