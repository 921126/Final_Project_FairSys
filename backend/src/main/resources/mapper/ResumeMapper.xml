<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.finalpj.backend.service.ResumeMapper">
	<!-- <select id="ApplyStatus" parameterType="ResumeWriteVO" resultType="ResumeWriteVO"> 
		select * from resume_write order by w_no desc; </select> -->

	<insert id="ResumeRegist" parameterType="ResumeWriteVO">
		insert into resume_write(user_name,
								 user_phone,
								 user_email,
								 user_address,
								 user_gender,
								 user_level,
								 user_finish,
								 user_major,
								 user_fndate,
								 user_com,
								 user_position,
								 user_join,
								 user_leave,
								 user_subject,
								 user_score,
								 user_get,
								 user_license,
								 user_getlicense,
								 user_id
										)
		values(
		#{user_name},
		#{user_phone},
		#{user_email},
		#{user_address},
		#{user_gender},
		#{user_level},
		#{user_finish},
		#{user_major},
		#{user_fndate},
		#{user_com},
		#{user_position},
		#{user_join},
		#{user_leave},
		#{user_subject},
		#{user_score},
		#{user_get},
		#{user_license},
		#{user_getlicense},
		#{user_id}
)

	</insert>


	<select id="ResumeModify" resultType="UserStatusVO">
		select * from user_status where user_no= #{user_no}
		 <!-- select * from user_status where user_no= #{user_no} -->
	</select>

	<select id="ResumeComModify" resultType="UserStatusVO">
		select * from user_status where user_no= #{user_no}
		 <!-- select * from user_status where user_no= #{user_no} -->
	</select>


	<update id="ResumeUpdate" parameterType="UserStatusVO">
		update user_status set user_name = #{user_name}, user_phone = #{user_phone}, user_email = #{user_email}, user_address = #{user_address},
		user_gender = #{user_gender},  user_level = #{user_level},
		user_finish = #{user_finish},
		user_major = #{user_major}, user_fndate = #{user_fndate}, user_com = #{user_com},
		user_position = #{user_position}, user_join = #{user_join}, user_leave = #{user_leave},
		user_subject = #{user_subject}, user_score = #{user_score}, user_get = #{user_get},
		user_license = #{user_license}, user_getlicense = #{user_getlicense} where user_id = #{user_id}
	
	</update>

	<select id="UserMyPage"  resultType="UserStatusVO"> 
			select * from user_status where user_id= #{user_id}
	</select>


	<delete id="delete" parameterType="UserStatusVO">
		delete from user_status where user_no = #{user_no};
	</delete>


	<select id="getList" resultType="UserStatusVO">
		select * from user_status where com_id = #{com_id}
		<if test="cri.searchTitle != null and cri.searchTitle !='' "> <![CDATA[ 
			and user_name like concat('%', #{cri.searchTitle}, '%')]]> </if>

		<if test="cri.searchStatus != null and cri.searchStatus !='' "> <![CDATA[ 
			and status like concat('%', #{cri.searchStatus}, '%')]]> </if>
	order by com_id desc
		limit #{cri.pageStart}, #{cri.amount};
	</select>

	<select id="getTotal" resultType="int">
		select count(*) as total from user_status
		<if test="cri.searchTitle != null and cri.searchTitle !='' "> <![CDATA[ 
			where user_name like concat('%', #{cri.searchTitle}, '%')]]> </if>

		
	</select>

	<update id="updateStatus" parameterType="UserStatusVO">
		<!-- update user_status set status = #{status} where w_no = #{w_no} and com_id = #{com_id} -->
		update user_status set status = #{status} where user_no = #{user_no} and com_id = #{com_id}
	</update>


<select id="getUserVO" resultType="UserVO">
    select * from user where user_id = #{user_id}
  </select>



</mapper>



